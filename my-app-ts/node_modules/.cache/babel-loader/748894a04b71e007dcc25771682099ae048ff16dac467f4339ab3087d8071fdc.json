{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/ChannelPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MessageList from \"./GetMessages\";\nimport EditMessage from \"./editMessage\";\nimport DeleteMessage from \"./deleteMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelPage = _ref => {\n  _s();\n  let {\n    channel\n  } = _ref;\n  //   const { channelName } = useParams<{ channelName: string }>();\n  const navigate = useNavigate();\n\n  //   const channel = channels.find((channel) => channel.channel_name === channelName);\n\n  if (!channel) {\n    return null;\n  }\n  const {\n    messages\n  } = channel;\n\n  // const GetMessages = () => {\n  //      navigate(`/GetMessages/`);\n  //    };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Channel: \", channel.channel_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message ID: \", message.message_id.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", message.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", message.content.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edited At: \", message.edited_at.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, message.message_id.String, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditMessage, {\n      onEditSuccess: () => ChannelPage(channel.channel_id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteMessage, {\n      messageId: messages.message_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      channelId: channel.channel_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ChannelPage;\nexport default ChannelPage;\n\n/*\nimport React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\ninterface Channel {\n  channel_id: number;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: number;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\ninterface ChannelPageProps {\n  channelName: string;\n  channels: Channel[];\n}\n\n\n\n\n\nconst ChannelPage: React.FC<ChannelPageProps> = ({ channelName, channels }) => {\n  const channel = channels.find((channel) => channel.channel_name === channelName);\n\n  const navigate = useNavigate();\n\n  if (!channel) {\n    return null;\n  }\n\n  const { messages } = channel;\n\n  const getMessages = () => {\n    navigate(\"/GetMessages/\");\n  };\n\n  return (\n    <div>\n      <h2>Channel: {channelName}</h2>\n      <h3>Messages:</h3>\n      <ul>\n        {messages.map((message) => (\n          <li key={message.message_id.String}>\n            <p>User ID: {message.user_id}</p>\n            <p>Content: {message.content.String}</p>\n            <p>Edited At: {message.edited_at.String}</p>\n          </li>\n        ))}\n      </ul>\n      <button onClick={getMessages}>チャンネルにメッセージを送る</button>\n    </div>\n  );\n};\n\nexport default ChannelPage;\n*/\nvar _c;\n$RefreshReg$(_c, \"ChannelPage\");","map":{"version":3,"names":["React","useNavigate","MessageList","EditMessage","DeleteMessage","jsxDEV","_jsxDEV","ChannelPage","_ref","_s","channel","navigate","messages","children","channel_name","fileName","_jsxFileName","lineNumber","columnNumber","map","message","message_id","String","user_id","content","edited_at","onEditSuccess","channel_id","messageId","channelId","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/ChannelPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport MessageList from \"./GetMessages\";\nimport EditMessage from \"./editMessage\";\nimport DeleteMessage from \"./deleteMessage\";\n\ninterface Channel {\n  channel_id: string;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: string;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\ninterface ChannelPageProps {\n  channel?: any;\n}\n\nconst ChannelPage: React.FC<ChannelPageProps> = ({ channel }) => {\n//   const { channelName } = useParams<{ channelName: string }>();\nconst navigate = useNavigate();\n\n//   const channel = channels.find((channel) => channel.channel_name === channelName);\n\n  if (!channel) {\n    return null;\n  }\n\n  const { messages } = channel;\n\n// const GetMessages = () => {\n//      navigate(`/GetMessages/`);\n//    };\n\n\n  return (\n    <div>\n      <h2>Channel: {channel.channel_name}</h2>\n      <h3>Messages:</h3>\n      <ul>\n        {messages.map((message:Message) => (\n          <li key={message.message_id.String}>\n            <p>Message ID: {message.message_id.String}</p>\n            <p>User ID: {message.user_id}</p>\n            <p>Content: {message.content.String}</p>\n            <p>Edited At: {message.edited_at.String}</p>\n          </li>\n        ))}\n      </ul>\n      {/* <button onClick={GetMessages}>チャンネルにメッセージを送る</button> */}\n      <EditMessage onEditSuccess={() => ChannelPage(channel.channel_id)}/>\n      <DeleteMessage messageId={messages.message_id} />\n      <MessageList channelId={channel.channel_id}/>\n    </div>\n  );\n};\n\nexport default ChannelPage;\n\n\n\n/*\nimport React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\ninterface Channel {\n  channel_id: number;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: number;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\ninterface ChannelPageProps {\n  channelName: string;\n  channels: Channel[];\n}\n\n\n\n\n\nconst ChannelPage: React.FC<ChannelPageProps> = ({ channelName, channels }) => {\n  const channel = channels.find((channel) => channel.channel_name === channelName);\n\n  const navigate = useNavigate();\n\n  if (!channel) {\n    return null;\n  }\n\n  const { messages } = channel;\n\n  const getMessages = () => {\n    navigate(\"/GetMessages/\");\n  };\n\n  return (\n    <div>\n      <h2>Channel: {channelName}</h2>\n      <h3>Messages:</h3>\n      <ul>\n        {messages.map((message) => (\n          <li key={message.message_id.String}>\n            <p>User ID: {message.user_id}</p>\n            <p>Content: {message.content.String}</p>\n            <p>Edited At: {message.edited_at.String}</p>\n          </li>\n        ))}\n      </ul>\n      <button onClick={getMessages}>チャンネルにメッセージを送る</button>\n    </div>\n  );\n};\n\nexport default ChannelPage;\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}