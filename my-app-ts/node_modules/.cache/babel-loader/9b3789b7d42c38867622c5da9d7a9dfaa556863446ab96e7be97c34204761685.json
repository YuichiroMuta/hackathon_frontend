{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/ChannelSelect.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelSelect = _ref => {\n  let {\n    userData\n  } = _ref;\n  if (!userData) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData.channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/channel/${channel.channel_name}`,\n          children: channel.channel_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = ChannelSelect;\nexport default ChannelSelect;\nvar _c;\n$RefreshReg$(_c, \"ChannelSelect\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","ChannelSelect","_ref","userData","children","fileName","_jsxFileName","lineNumber","columnNumber","channels","map","channel","to","channel_name","channel_id","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/ChannelSelect.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface Channel {\n  channel_id: number;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: number;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\ninterface UserData {\n  user_id: string;\n  channels: Channel[];\n}\n\ninterface ChannelSelectProps {\n  userData: UserData | null;\n}\n\nconst ChannelSelect: React.FC<ChannelSelectProps> = ({ userData }) => {\n  if (!userData) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Select a channel:</h2>\n      <ul>\n        {userData.channels.map((channel) => (\n          <li key={channel.channel_id}>\n            <Link to={`/channel/${channel.channel_name}`}>{channel.channel_name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChannelSelect;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkCxC,MAAMC,aAA2C,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC/D,IAAI,CAACC,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BR,OAAA;MAAAI,QAAA,EACGD,QAAQ,CAACM,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC7BX,OAAA;QAAAI,QAAA,eACEJ,OAAA,CAACF,IAAI;UAACc,EAAE,EAAG,YAAWD,OAAO,CAACE,YAAa,EAAE;UAAAT,QAAA,EAAEO,OAAO,CAACE;QAAY;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADpEG,OAAO,CAACG,UAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACO,EAAA,GAjBId,aAA2C;AAmBjD,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}