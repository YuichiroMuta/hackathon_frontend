{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon_frontend/my-app-ts/src/deleteMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteMessage = _ref => {\n  _s();\n  let {\n    channelId\n  } = _ref;\n  const [messageId, setMessageId] = useState('');\n\n  // メッセージの削除ハンドラ\n  const handleDelete = async () => {\n    try {\n      // メッセージの削除リクエストを送信\n      await axios.get(`https://curriculum-3-muta-yuichiro-hackathon-eaq52kewiq-uc.a.run.app/delete-message?message_id=${messageId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slack-delete-message\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slack-delete-message__input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"slack-delete-message__input\",\n        value: messageId,\n        onChange: e => setMessageId(e.target.value),\n        placeholder: \"Enter message ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slack-delete-message__button\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteMessage, \"wqYPw6zOPz+EsIG7/Hb5YJkRkf8=\");\n_c = DeleteMessage;\nexport default DeleteMessage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// type Message = {\n//   message_id: string;\n//   channel_id: number;\n//   user_id: string;\n//   content: string;\n//   edited_at: string;\n// };\n\n// interface DeleteMessageProps {\n//   messageId: string;\n// }\n\n// const DeleteMessage: React.FC<DeleteMessageProps> = ({ messageId }) => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n\n//   // メッセージの削除ハンドラ\n//   const handleDelete = async (messageId: string) => {\n//     try {\n//       // メッセージの削除リクエストを送信\n//       await axios.get(`http://localhost:8081/delete-message?message_id=${messageId} `);\n\n//       // メッセージを削除した後、更新されたメッセージリストを取得\n//       const updatedMessages = await fetchMessages();\n//       setMessages(updatedMessages);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   // メッセージリストの取得\n//   const fetchMessages = async () => {\n//     try {\n//       const response = await axios.get('/messages');\n//       return response.data.messages;\n//     } catch (error) {\n//       console.log(error);\n//       return [];\n//     }\n//   };\n\n//   // コンポーネントのマウント時にメッセージリストを取得\n//   useEffect(() => {\n//     const getMessages = async () => {\n//       const updatedMessages = await fetchMessages();\n//       setMessages(updatedMessages);\n//     };\n\n//     getMessages();\n//   }, []);\n\n//   return (\n//     <div>\n//       {messages.map((message) => (\n//         <div key={message.message_id}>\n//           <p>{message.content}</p>\n//           <button onClick={() => handleDelete(messageId)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default DeleteMessage;\nvar _c;\n$RefreshReg$(_c, \"DeleteMessage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeleteMessage","_ref","_s","channelId","messageId","setMessageId","handleDelete","get","error","console","log","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon_frontend/my-app-ts/src/deleteMessage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface DeleteMessageProps {\n  channelId: number;\n}\n\nconst DeleteMessage: React.FC<DeleteMessageProps> = ({ channelId }) => {\n  const [messageId, setMessageId] = useState('');\n\n  // メッセージの削除ハンドラ\n  const handleDelete = async () => {\n    try {\n      // メッセージの削除リクエストを送信\n      await axios.get(`https://curriculum-3-muta-yuichiro-hackathon-eaq52kewiq-uc.a.run.app/delete-message?message_id=${messageId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"slack-delete-message\">\n    <div className=\"slack-delete-message__input-group\">\n      <input\n        type=\"text\"\n        className=\"slack-delete-message__input\"\n        value={messageId}\n        onChange={(e) => setMessageId(e.target.value)}\n        placeholder=\"Enter message ID\"\n      />\n      <button className=\"slack-delete-message__button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  </div>\n  );\n};\n\nexport default DeleteMessage;\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// type Message = {\n//   message_id: string;\n//   channel_id: number;\n//   user_id: string;\n//   content: string;\n//   edited_at: string;\n// };\n\n// interface DeleteMessageProps {\n//   messageId: string;\n// }\n\n// const DeleteMessage: React.FC<DeleteMessageProps> = ({ messageId }) => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n\n//   // メッセージの削除ハンドラ\n//   const handleDelete = async (messageId: string) => {\n//     try {\n//       // メッセージの削除リクエストを送信\n//       await axios.get(`http://localhost:8081/delete-message?message_id=${messageId} `);\n\n//       // メッセージを削除した後、更新されたメッセージリストを取得\n//       const updatedMessages = await fetchMessages();\n//       setMessages(updatedMessages);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   // メッセージリストの取得\n//   const fetchMessages = async () => {\n//     try {\n//       const response = await axios.get('/messages');\n//       return response.data.messages;\n//     } catch (error) {\n//       console.log(error);\n//       return [];\n//     }\n//   };\n\n//   // コンポーネントのマウント時にメッセージリストを取得\n//   useEffect(() => {\n//     const getMessages = async () => {\n//       const updatedMessages = await fetchMessages();\n//       setMessages(updatedMessages);\n//     };\n\n//     getMessages();\n//   }, []);\n\n//   return (\n//     <div>\n//       {messages.map((message) => (\n//         <div key={message.message_id}>\n//           <p>{message.content}</p>\n//           <button onClick={() => handleDelete(messageId)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default DeleteMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,aAA2C,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAChE,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMT,KAAK,CAACU,GAAG,CAAE,kGAAiGH,SAAU,EAAC,CAAC;IAChI,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACrCb,OAAA;MAAKY,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDb,OAAA;QACEc,IAAI,EAAC,MAAM;QACXF,SAAS,EAAC,6BAA6B;QACvCG,KAAK,EAAEV,SAAU;QACjBW,QAAQ,EAAGC,CAAC,IAAKX,YAAY,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFvB,OAAA;QAAQY,SAAS,EAAC,8BAA8B;QAACY,OAAO,EAAEjB,YAAa;QAAAM,QAAA,EAAC;MAExE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACpB,EAAA,CA7BIF,aAA2C;AAAAwB,EAAA,GAA3CxB,aAA2C;AA+BjD,eAAeA,aAAa;;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}