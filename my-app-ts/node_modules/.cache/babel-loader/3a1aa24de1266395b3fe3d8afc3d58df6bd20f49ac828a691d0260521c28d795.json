{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannels3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userEmail } from \"./Mypage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUserChannels3 = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    channelName\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/user-channels?email=${userEmail}`);\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData.channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/channel/${channel.channel_name}`,\n          children: channel.channel_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n/* <div>\n   <h1>User Data:</h1>\n   <BrowserRouter>\n     <Routes>\n       <Route\n         path=\"/user-channels\"\n         element={<ChannelSelect userData={userData} />}\n       />\n       <Route\n         path=\"/channel/:channelName\"\n         element={\n           <ChannelPage\n             channels={userData?.channels || []}\n             channelName={channelName || \"\"}\n           />\n         }\n       />\n     </Routes>\n   </BrowserRouter>\n </div>\n);\n};\n*/\n_s(GetUserChannels3, \"UAhpFdVD9vGiNnfShnWRdUSD1k4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GetUserChannels3;\nexport default GetUserChannels3;\nvar _c;\n$RefreshReg$(_c, \"GetUserChannels3\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","axios","userEmail","jsxDEV","_jsxDEV","GetUserChannels3","_s","userData","setUserData","isLoading","setIsLoading","error","setError","channelName","navigate","fetchUserData","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","channels","map","channel","to","channel_name","channel_id","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannels3.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, useParams, useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ChannelSelect from \"./ChannelSelect\";\nimport ChannelPage from \"./ChannelPage\";\nimport { userEmail } from \"./Mypage\";\n\ninterface UserData {\n  user_id: string;\n  channels: Channel[];\n}\n\ninterface Channel {\n  channel_id: number;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: number;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\nconst GetUserChannels3: React.FC = () => {\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { channelName } = useParams<{ channelName: string }>();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8081/user-channels?email=${userEmail}`\n        );\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n\n  return (\n    <div>\n      <h2>Select a channel:</h2>\n      {userData && (\n      <ul>\n        {userData.channels.map((channel) => (\n          <li key={channel.channel_id}>\n            <Link to={`/channel/${channel.channel_name}`}>{channel.channel_name}</Link>\n          </li>\n        ))}\n      </ul>\n      )}\n    </div>\n  );        \n};\n\n\n   /* <div>\n      <h1>User Data:</h1>\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/user-channels\"\n            element={<ChannelSelect userData={userData} />}\n          />\n          <Route\n            path=\"/channel/:channelName\"\n            element={\n              <ChannelPage\n                channels={userData?.channels || []}\n                channelName={channelName || \"\"}\n              />\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n};\n*/\n\nexport default GetUserChannels3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}