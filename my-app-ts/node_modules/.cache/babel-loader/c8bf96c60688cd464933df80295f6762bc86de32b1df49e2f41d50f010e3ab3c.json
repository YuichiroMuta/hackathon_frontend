{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannels3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ChannelPage from \"./ChannelPage\";\nexport let setChannelId = null;\nimport { userEmail } from \"./Mypage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetUserChannels3 = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    channelName\n  } = useParams();\n  const navigate = useNavigate();\n  const [displayChannel, setDisplayChannel] = useState();\n  const [channelID, setChannelId] = useState();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/user-channels?email=${userEmail}`);\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  const channelIndex = userData !== null && userData !== void 0 && userData.channels ? userData === null || userData === void 0 ? void 0 : userData.channels.findIndex(v => v.channel_name === displayChannel) : undefined;\n  const channelPage = channelIndex !== undefined && userData ? /*#__PURE__*/_jsxDEV(ChannelPage, {\n    channel: userData.channels[channelIndex]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 65\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData.channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            setDisplayChannel(channel.channel_name), setChannelId(channel.channel_id);\n          },\n          children: channel.channel_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), channelPage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n/* <div>\n   <h1>User Data:</h1>\n   <BrowserRouter>\n     <Routes>\n       <Route\n         path=\"/user-channels\"\n         element={<ChannelSelect userData={userData} />}\n       />\n       <Route\n         path=\"/channel/:channelName\"\n         element={\n           <ChannelPage\n             channels={userData?.channels || []}\n             channelName={channelName || \"\"}\n           />\n         }\n       />\n     </Routes>\n   </BrowserRouter>\n </div>\n);\n};\n*/\n_s(GetUserChannels3, \"2PPUbFGxDMuOYQnx029PBFUOcGY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GetUserChannels3;\nexport default GetUserChannels3;\nvar _c;\n$RefreshReg$(_c, \"GetUserChannels3\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","ChannelPage","setChannelId","userEmail","jsxDEV","_jsxDEV","Fragment","_Fragment","GetUserChannels3","_s","userData","setUserData","isLoading","setIsLoading","error","setError","channelName","navigate","displayChannel","setDisplayChannel","channelID","fetchUserData","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","channelIndex","channels","findIndex","v","channel_name","undefined","channelPage","channel","map","onClick","e","channel_id","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannels3.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, useParams, useNavigate, Link, Form } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ChannelSelect from \"./ChannelSelect\";\nimport ChannelPage from \"./ChannelPage\";\nexport let setChannelId: number | null = null; \nimport { userEmail } from \"./Mypage\";\n\n\n\ninterface UserData {\n  user_id: string;\n  channels: Channel[];\n}\n\ninterface Channel {\n  channel_id: string;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: string;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\nconst GetUserChannels3: React.FC = () => {\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { channelName } = useParams<{ channelName: string }>();\n  const navigate = useNavigate();\n  const [displayChannel, setDisplayChannel] = useState<string>();\n  const [channelID, setChannelId]= useState<any>();\n  \n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8081/user-channels?email=${userEmail}`\n        );\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  const channelIndex = userData?.channels ? userData?.channels.findIndex(v => v.channel_name === displayChannel) : undefined;\n  const channelPage = (channelIndex!== undefined && userData) ? <ChannelPage channel={userData.channels[channelIndex]}></ChannelPage> :<></>\n  \n  \n  return (\n    <div>\n      <h2>Select a channel:</h2>\n      {userData && (\n      <ul>\n        {userData.channels.map((channel) => (\n          <li key={channel.channel_id}>\n          <button onClick={(e) => {setDisplayChannel(channel.channel_name),setChannelId(channel.channel_id)}}>\n            {channel.channel_name}\n          </button>\n        </li>\n        ))}\n      </ul>\n      )}\n    {channelPage}\n    </div>\n  );        \n};\n\n\n   /* <div>\n      <h1>User Data:</h1>\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/user-channels\"\n            element={<ChannelSelect userData={userData} />}\n          />\n          <Route\n            path=\"/channel/:channelName\"\n            element={\n              <ChannelPage\n                channels={userData?.channels || []}\n                channelName={channelName || \"\"}\n              />\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n};\n*/\n\nexport default GetUserChannels3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}