{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannel2.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Link, useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userEmail } from \"./Mypage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelSelect = _ref => {\n  let {\n    userData\n  } = _ref;\n  if (!userData) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData.channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/channel/${channel.channel_name}`,\n          children: channel.channel_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = ChannelSelect;\nconst ChannelPage = _ref2 => {\n  _s();\n  let {\n    channelName,\n    channels\n  } = _ref2;\n  const channel = channels.find(channel => channel.channel_name === channelName);\n  const navigate = useNavigate();\n  if (!channel) {\n    return null;\n  }\n  const {\n    messages\n  } = channel;\n  const getMessages = async () => {\n    navigate(\"/GetMessages/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Channel: \", channelName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", message.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", message.content.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edited At: \", message.edited_at.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, message.message_id.String, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMessages,\n      children: \"\\u30C1\\u30E3\\u30F3\\u30CD\\u30EB\\u306B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u9001\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ChannelPage;\nconst GetUserChannels2 = () => {\n  _s2();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    channelName\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/user-channels?email=${userEmail}`);\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user-channels\",\n          element: /*#__PURE__*/_jsxDEV(ChannelSelect, {\n            userData: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/channel/:channelName\",\n          element: /*#__PURE__*/_jsxDEV(ChannelPage, {\n            channels: (userData === null || userData === void 0 ? void 0 : userData.channels) || [],\n            channelName: channelName || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s2(GetUserChannels2, \"UAhpFdVD9vGiNnfShnWRdUSD1k4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c3 = GetUserChannels2;\nexport default GetUserChannels2;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChannelSelect\");\n$RefreshReg$(_c2, \"ChannelPage\");\n$RefreshReg$(_c3, \"GetUserChannels2\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Link","useNavigate","useParams","axios","userEmail","jsxDEV","_jsxDEV","ChannelSelect","_ref","userData","children","fileName","_jsxFileName","lineNumber","columnNumber","channels","map","channel","to","channel_name","channel_id","_c","ChannelPage","_ref2","_s","channelName","find","navigate","messages","getMessages","message","user_id","content","String","edited_at","message_id","onClick","_c2","GetUserChannels2","_s2","setUserData","isLoading","setIsLoading","error","setError","fetchUserData","response","get","data","path","element","_c3","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/GetUserChannel2.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Link, useNavigate, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {userEmail} from \"./Mypage\";\n\ninterface Channel {\n  channel_id: number;\n  channel_name: string;\n  messages: Message[];\n}\n\ninterface Message {\n  message_id: {\n    String: string;\n    Valid: boolean;\n  };\n  channel_id: number;\n  user_id: string;\n  content: {\n    String: string;\n    Valid: boolean;\n  };\n  edited_at: {\n    String: string;\n    Valid: boolean;\n  };\n}\n\ninterface UserData {\n  user_id: string;\n  channels: Channel[];\n}\n\ninterface ChannelSelectProps {\n  userData: UserData | null;\n}\n\nconst ChannelSelect: React.FC<ChannelSelectProps> = ({ userData }) => {\n  if (!userData) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Select a channel:</h2>\n      <ul>\n        {userData.channels.map((channel) => (\n          <li key={channel.channel_id}>\n            <Link to={`/channel/${channel.channel_name}`}>{channel.channel_name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\ninterface ChannelPageProps {\n  channelName: string;\n  channels: Channel[];\n}\n\ninterface ChannelParams {\n    channelName: string;\n  }\n\n\nconst ChannelPage: React.FC<ChannelPageProps> = ({ channelName, channels }) => {\n  const channel = channels.find((channel) => channel.channel_name === channelName);\n\nconst navigate = useNavigate();\n  \n  \n\n  if (!channel) {\n    return null;\n  }\n\n  const { messages } = channel;\n\n\n  const getMessages = async () => {\n    navigate(\"/GetMessages/\");\n  };\n\n  return (\n    <div>\n      <h2>Channel: {channelName}</h2>\n      <h3>Messages:</h3>\n      <ul>\n        {messages.map((message) => (\n          <li key={message.message_id.String}>\n            <p>User ID: {message.user_id}</p>\n            <p>Content: {message.content.String}</p>\n            <p>Edited At: {message.edited_at.String}</p>\n          </li>\n        ))}\n      </ul>\n      <button onClick={getMessages}>„ÉÅ„É£„É≥„Éç„É´„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„Çã</button>\n    </div>\n  );\n};\n\nconst GetUserChannels2: React.FC = () => {\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { channelName } = useParams<{ channelName: string }>();\n  const navigate = useNavigate();\n  \n\n  \n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/user-channels?email=${userEmail}`);\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch user data\");\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n  <h1>User Data:</h1>\n  <BrowserRouter>\n    <Routes>\n        <Route\n          path=\"/user-channels\"\n          element={<ChannelSelect userData={userData} />}\n        />\n        <Route\n          path=\"/channel/:channelName\"\n          element={<ChannelPage channels={userData?.channels || []} channelName={channelName || \"\"} />}\n        />\n    </Routes>\n  </BrowserRouter>\n</div>\n  );\n};\n\nexport default GetUserChannels2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}