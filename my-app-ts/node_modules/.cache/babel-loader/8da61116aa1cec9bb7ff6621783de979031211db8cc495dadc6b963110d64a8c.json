{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/deleteMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteMessage = _ref => {\n  _s();\n  let {\n    messageId\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n\n  // メッセージの削除ハンドラ\n  const handleDelete = async messageId => {\n    try {\n      // メッセージの削除リクエストを送信\n      await axios.post('/delete-message', {\n        message_id: messageId\n      });\n\n      // メッセージを削除した後、更新されたメッセージリストを取得\n      const updatedMessages = await fetchMessages();\n      setMessages(updatedMessages);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // メッセージリストの取得\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get('/messages');\n      return response.data.messages;\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  // コンポーネントのマウント時にメッセージリストを取得\n  useEffect(() => {\n    const getMessages = async () => {\n      const updatedMessages = await fetchMessages();\n      setMessages(updatedMessages);\n    };\n    getMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(messageId),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, message.message_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteMessage, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = DeleteMessage;\nexport default DeleteMessage;\nvar _c;\n$RefreshReg$(_c, \"DeleteMessage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DeleteMessage","_ref","_s","messageId","messages","setMessages","handleDelete","post","message_id","updatedMessages","fetchMessages","error","console","log","response","get","data","getMessages","children","map","message","content","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/deleteMessage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ntype Message = {\n  message_id: string;\n  channel_id: number;\n  user_id: string;\n  content: string;\n  edited_at: string;\n};\n\ninterface DeleteMessageProps {\n  messageId: string;\n}\n\nconst DeleteMessage: React.FC<DeleteMessageProps> = ({ messageId }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  // メッセージの削除ハンドラ\n  const handleDelete = async (messageId: string) => {\n    try {\n      // メッセージの削除リクエストを送信\n      await axios.post('/delete-message', { message_id: messageId });\n\n      // メッセージを削除した後、更新されたメッセージリストを取得\n      const updatedMessages = await fetchMessages();\n      setMessages(updatedMessages);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // メッセージリストの取得\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get('/messages');\n      return response.data.messages;\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  // コンポーネントのマウント時にメッセージリストを取得\n  useEffect(() => {\n    const getMessages = async () => {\n      const updatedMessages = await fetchMessages();\n      setMessages(updatedMessages);\n    };\n\n    getMessages();\n  }, []);\n\n  return (\n    <div>\n      {messages.map((message) => (\n        <div key={message.message_id}>\n          <p>{message.content}</p>\n          <button onClick={() => handleDelete(messageId)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DeleteMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc1B,MAAMC,aAA2C,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAChE,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAY,EAAE,CAAC;;EAEvD;EACA,MAAMW,YAAY,GAAG,MAAOH,SAAiB,IAAK;IAChD,IAAI;MACF;MACA,MAAMN,KAAK,CAACU,IAAI,CAAC,iBAAiB,EAAE;QAAEC,UAAU,EAAEL;MAAU,CAAC,CAAC;;MAE9D;MACA,MAAMM,eAAe,GAAG,MAAMC,aAAa,CAAC,CAAC;MAC7CL,WAAW,CAACI,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,WAAW,CAAC;MAC7C,OAAOD,QAAQ,CAACE,IAAI,CAACZ,QAAQ;IAC/B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMR,eAAe,GAAG,MAAMC,aAAa,CAAC,CAAC;MAC7CL,WAAW,CAACI,eAAe,CAAC;IAC9B,CAAC;IAEDQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAmB,QAAA,EACGd,QAAQ,CAACe,GAAG,CAAEC,OAAO,iBACpBrB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAIE,OAAO,CAACC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB1B,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACH,SAAS,CAAE;QAAAe,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFvDL,OAAO,CAACZ,UAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhDIF,aAA2C;AAAA2B,EAAA,GAA3C3B,aAA2C;AAkDjD,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}