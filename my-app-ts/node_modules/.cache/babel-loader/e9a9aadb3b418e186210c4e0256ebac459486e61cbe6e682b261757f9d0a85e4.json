{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon_frontend/my-app-ts/src/Mypage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { useNavigate, Navigate, Link } from \"react-router-dom\";\nimport './MyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let userEmail = null;\nconst Mypage = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      setLoading(false);\n      if (currentUser) {\n        userEmail = currentUser.email; // userEmailにユーザのメールアドレスを代入\n      }\n    });\n  }, []);\n  const navigate = useNavigate();\n  const logout = async () => {\n    await signOut(auth);\n    navigate(\"/login/\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !user ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: `/login/`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slack-mypage\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"slack-mypage__title\",\n            children: \"\\u30DE\\u30A4\\u30DA\\u30FC\\u30B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"slack-mypage__email\",\n            children: user && user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"slack-mypage__logout\",\n            onClick: logout,\n            children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u30C1\\u30E3\\u30F3\\u30CD\\u30EB\\u9078\\u629E\\u306F\", /*#__PURE__*/_jsxDEV(Link, {\n              className: \"slack-mypage__link\",\n              to: `/getUserChannels/`,\n              children: \"\\u3053\\u3061\\u3089\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(Mypage, \"RUyLY+F3mml0E6houBNhEHweXU8=\", false, function () {\n  return [useNavigate];\n});\n_c = Mypage;\nexport default Mypage;\n\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { useNavigate, Navigate, Link } from \"react-router-dom\";\n\n\nconst Mypage: React.FC = () => {\n  const [user, setUser] = useState<any>(\"\");\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      setLoading(false);\n    });\n  }, []);\n\n  const navigate = useNavigate();\n\n  const logout = async () => {\n    await signOut(auth);\n    navigate(\"/login/\");\n  };\n\n\n  //ボタン(「チャンネルを選択」)を押すとemail情報をサーバに送り、getuserchannelコンポーネントを処理するようにしたい\n\n  return (\n    <>\n      {!loading && (\n        <>\n          {!user ? (\n            <Navigate to={`/login/`} />\n          ) : (\n            <>\n              <h1>マイページ</h1>\n              <p>{user && user.email}</p>\n              <button onClick={logout}>ログアウト</button>\n              <p>\n              チャンネル選択は<Link to={`/getUserChannels/`}>こちら</Link>\n            </p>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Mypage;\n*/\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","useState","useEffect","onAuthStateChanged","signOut","auth","useNavigate","Navigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","userEmail","Mypage","_s","user","setUser","loading","setLoading","currentUser","email","navigate","logout","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon_frontend/my-app-ts/src/Mypage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { useNavigate, Navigate, Link } from \"react-router-dom\";\nimport './MyPage.css';\n\nexport let userEmail: string | null = null; \n\nconst Mypage: React.FC = () => {\n  const [user, setUser] = useState<any>(\"\");\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      setLoading(false);\n      if (currentUser) {\n        userEmail = currentUser.email; // userEmailにユーザのメールアドレスを代入\n      }\n    });\n  }, []);\n\n  const navigate = useNavigate();\n\n  const logout = async () => {\n    await signOut(auth);\n    navigate(\"/login/\");\n  };\n\n  return (\n    <>\n      {!loading && (\n        <>\n          {!user ? (\n            <Navigate to={`/login/`} />\n          ) : (\n            <>\n              <div className=\"slack-mypage\">\n                <h1 className=\"slack-mypage__title\">マイページ</h1>\n                <p className=\"slack-mypage__email\">{user && user.email}</p>\n                <button className=\"slack-mypage__logout\" onClick={logout}>ログアウト</button>\n                <p>\n                  チャンネル選択は<Link className=\"slack-mypage__link\" to={`/getUserChannels/`}>こちら</Link>\n                </p>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );}\n\nexport default Mypage;\n\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { useNavigate, Navigate, Link } from \"react-router-dom\";\n\n\nconst Mypage: React.FC = () => {\n  const [user, setUser] = useState<any>(\"\");\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      setLoading(false);\n    });\n  }, []);\n\n  const navigate = useNavigate();\n\n  const logout = async () => {\n    await signOut(auth);\n    navigate(\"/login/\");\n  };\n\n\n  //ボタン(「チャンネルを選択」)を押すとemail情報をサーバに送り、getuserchannelコンポーネントを処理するようにしたい\n\n  return (\n    <>\n      {!loading && (\n        <>\n          {!user ? (\n            <Navigate to={`/login/`} />\n          ) : (\n            <>\n              <h1>マイページ</h1>\n              <p>{user && user.email}</p>\n              <button onClick={logout}>ログアウト</button>\n              <p>\n              チャンネル選択は<Link to={`/getUserChannels/`}>こちら</Link>\n            </p>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Mypage;\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}