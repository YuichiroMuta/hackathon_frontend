{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/CreateMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMessage = () => {\n  _s();\n  const [channelId, setChannelId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [content, setContent] = useState('');\n  const [error, setError] = useState('');\n  const handleCreateMessage = async () => {\n    // 入力値のバリデーション\n    if (!channelId || !userId || !content) {\n      setError('Please fill in all fields');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8081/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channelId: \"00000000000000000000000002\",\n          userId: \"01H23SFZ79S1PVEEZA1V5Q4W0G\",\n          content: \"こんん\"\n        })\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setError(errorResponse.error);\n        return;\n      }\n\n      // メッセージ作成成功\n      setError('');\n      setChannelId('');\n      setUserId('');\n      setContent('');\n    } catch (error) {\n      setError('Failed to create message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channelId\",\n          children: \"Channel ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channelId\",\n          value: channelId,\n          onChange: e => setChannelId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userId\",\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userId\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCreateMessage,\n        children: \"Create Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMessage, \"7u+zipgllRMNC9Cai9Ikqqdw6QU=\");\n_c = CreateMessage;\nexport default CreateMessage;\nvar _c;\n$RefreshReg$(_c, \"CreateMessage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateMessage","_s","channelId","setChannelId","userId","setUserId","content","setContent","error","setError","handleCreateMessage","response","fetch","method","headers","body","JSON","stringify","ok","errorResponse","json","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/CreateMessage.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CreateMessage: React.FC = () => {\n    const [channelId, setChannelId] = useState('');\n    const [userId, setUserId] = useState('');\n    const [content, setContent] = useState('');\n    const [error, setError] = useState('');\n\n    const handleCreateMessage = async () => {\n        // 入力値のバリデーション\n        if (!channelId || !userId || !content) {\n            setError('Please fill in all fields');\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:8081/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    channelId:\"00000000000000000000000002\",\nuserId:\"01H23SFZ79S1PVEEZA1V5Q4W0G\",\ncontent:\"こんん\"\n                }),\n            });\n\n            if (!response.ok) {\n                const errorResponse = await response.json();\n                setError(errorResponse.error);\n                return;\n            }\n\n            // メッセージ作成成功\n            setError('');\n            setChannelId('');\n            setUserId('');\n            setContent('');\n        } catch (error) {\n            setError('Failed to create message');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Create Message</h2>\n            {error && <p>Error: {error}</p>}\n            <form>\n                <div>\n                    <label htmlFor=\"channelId\">Channel ID:</label>\n                    <input\n                        type=\"text\"\n                        id=\"channelId\"\n                        value={channelId}\n                        onChange={(e) => setChannelId(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"userId\">User ID:</label>\n                    <input\n                        type=\"text\"\n                        id=\"userId\"\n                        value={userId}\n                        onChange={(e) => setUserId(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"content\">Content:</label>\n                    <input\n                        type=\"text\"\n                        id=\"content\"\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                    />\n                </div>\n                <button type=\"button\" onClick={handleCreateMessage}>\n                    Create Message\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}