{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { Navigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerName, setRegisterName] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const handleRegisterSubmit = async e => {\n    e.preventDefault();\n    if (!registerName) {\n      alert(\"Please enter a name\");\n      return;\n    }\n    if (registerName.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n    try {\n      await createUserWithEmailAndPassword(auth, registerEmail, registerPassword);\n      await fetchUsers();\n    } catch (error) {\n      alert(\"Failed to register. Please check your input.\");\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: registerEmail,\n          password: registerPassword,\n          name: registerName\n        })\n      });\n      if (!res.ok) {\n        throw Error(`Failed to fetch users: ${res.status}`);\n      }\n      const users = await res.json();\n      setUser(users);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/?email=${user.email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u65B0\\u898F\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegisterSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            value: registerEmail,\n            onChange: e => setRegisterEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: registerPassword,\n            autoComplete: \"new-password\",\n            onChange: e => setRegisterPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleRegisterSubmit,\n          children: \"\\u767B\\u9332\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u30ED\\u30B0\\u30A4\\u30F3\\u306F\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/login/`,\n            children: \"\\u3053\\u3061\\u3089\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Register, \"GArQkpYWmzEwM3qdR+gxo8tvOU4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","createUserWithEmailAndPassword","onAuthStateChanged","auth","Navigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","registerName","setRegisterName","user","setUser","handleRegisterSubmit","e","preventDefault","alert","length","fetchUsers","error","res","fetch","method","body","JSON","stringify","email","password","name","ok","Error","status","users","json","err","console","currentUser","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","autoComplete","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/Register.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { Navigate, Link } from \"react-router-dom\";\n\nconst Register: React.FC = () => {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerName, setRegisterName] = useState(\"\");\n  const [user, setUser] = useState<any>(\"\");\n\n  const handleRegisterSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!registerName) {\n      alert(\"Please enter a name\");\n      return;\n    }\n\n    if (registerName.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n\n    try {\n      await createUserWithEmailAndPassword(auth, registerEmail, registerPassword);\n      await fetchUsers();\n    } catch (error) {\n      alert(\"Failed to register. Please check your input.\");\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: registerEmail,\n          password: registerPassword,\n          name: registerName\n        }),\n      });\n\n      if (!res.ok) {\n        throw Error(`Failed to fetch users: ${res.status}`);\n      }\n\n      const users = await res.json();\n      setUser(users);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n  }, []);\n\n  return (\n    <>\n      {user ? (\n        <Navigate to={`/?email=${user.email}`} />\n      ) : (\n        <>\n          <h1>新規登録</h1>\n          <form onSubmit={handleRegisterSubmit}>\n            <div>\n              <label htmlFor=\"email\">メールアドレス</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={registerEmail}\n                onChange={(e) => setRegisterEmail(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\">パスワード</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                value={registerPassword}\n                autoComplete=\"new-password\"\n                onChange={(e) => setRegisterPassword(e.target.value)}\n              />\n            </div>\n            <button type=\"button\" onClick={handleRegisterSubmit}>\n              登録する\n            </button>\n            <p>\n              ログインは<Link to={`/login/`}>こちら</Link>\n            </p>\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,8BAA8B,EAAEC,kBAAkB,QAAQ,eAAe;AAClF,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAM,EAAE,CAAC;EAEzC,MAAMqB,oBAAoB,GAAG,MAAOC,CAAkB,IAAK;IACzDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,YAAY,EAAE;MACjBO,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF;IAEA,IAAIP,YAAY,CAACQ,MAAM,GAAG,EAAE,EAAE;MAC5BD,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;IAEA,IAAI;MACF,MAAMtB,8BAA8B,CAACE,IAAI,EAAES,aAAa,EAAEE,gBAAgB,CAAC;MAC3E,MAAMW,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAErB,aAAa;UACpBsB,QAAQ,EAAEpB,gBAAgB;UAC1BqB,IAAI,EAAEnB;QACR,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACW,GAAG,CAACS,EAAE,EAAE;QACX,MAAMC,KAAK,CAAE,0BAAyBV,GAAG,CAACW,MAAO,EAAC,CAAC;MACrD;MAEA,MAAMC,KAAK,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;MAC9BrB,OAAO,CAACoB,KAAK,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAAChB,KAAK,CAACe,GAAG,CAAC;IACpB;EACF,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACdE,kBAAkB,CAACC,IAAI,EAAGwC,WAAW,IAAK;MACxCxB,OAAO,CAACwB,WAAW,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,EACG1B,IAAI,gBACHX,OAAA,CAACH,QAAQ;MAACyC,EAAE,EAAG,WAAU3B,IAAI,CAACe,KAAM;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzC1C,OAAA,CAAAE,SAAA;MAAAmC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,EAAI;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb1C,OAAA;QAAM2C,QAAQ,EAAE9B,oBAAqB;QAAAwB,QAAA,gBACnCrC,OAAA;UAAAqC,QAAA,gBACErC,OAAA;YAAO4C,OAAO,EAAC,OAAO;YAAAP,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtC1C,OAAA;YACE6C,EAAE,EAAC,OAAO;YACVjB,IAAI,EAAC,OAAO;YACZkB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAE1C,aAAc;YACrB2C,QAAQ,EAAGlC,CAAC,IAAKR,gBAAgB,CAACQ,CAAC,CAACmC,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1C,OAAA;UAAAqC,QAAA,gBACErC,OAAA;YAAO4C,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvC1C,OAAA;YACE6C,EAAE,EAAC,UAAU;YACbjB,IAAI,EAAC,UAAU;YACfkB,IAAI,EAAC,UAAU;YACfC,KAAK,EAAExC,gBAAiB;YACxB2C,YAAY,EAAC,cAAc;YAC3BF,QAAQ,EAAGlC,CAAC,IAAKN,mBAAmB,CAACM,CAAC,CAACmC,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1C,OAAA;UAAQ8C,IAAI,EAAC,QAAQ;UAACK,OAAO,EAAEtC,oBAAqB;UAAAwB,QAAA,EAAC;QAErD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1C,OAAA;UAAAqC,QAAA,GAAG,gCACI,eAAArC,OAAA,CAACF,IAAI;YAACwC,EAAE,EAAG,SAAS;YAAAD,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACP;EACH,gBACD,CAAC;AAEP,CAAC;AAACtC,EAAA,CA/FID,QAAkB;AAAAiD,EAAA,GAAlBjD,QAAkB;AAiGxB,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}