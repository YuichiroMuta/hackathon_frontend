{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/getUserChannels.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelSelect = _ref => {\n  _s();\n  let {\n    userData,\n    onSelectChannel\n  } = _ref;\n  const [selectedChannel, setSelectedChannel] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (userData && userData.channels.length > 0) {\n      setSelectedChannel(userData.channels[0].channel_name);\n      onSelectChannel(userData.channels[0].channel_name);\n    }\n  }, [userData, onSelectChannel]);\n  const handleSelectChannel = channelName => {\n    setSelectedChannel(channelName);\n    onSelectChannel(channelName);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData === null || userData === void 0 ? void 0 : userData.channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectChannel(channel.channel_name),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: channel.channel_name\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), selectedChannel && /*#__PURE__*/_jsxDEV(MessageList, {\n      messages: getMessages(selectedChannel, userData === null || userData === void 0 ? void 0 : userData.channels)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelSelect, \"c9hFk8IPSEMRYzn1uYSmIgtD61o=\");\n_c = ChannelSelect;\nconst MessageList = _ref2 => {\n  let {\n    messages\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", message.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", message.content.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edited At: \", message.edited_at.String]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, message.message_id.String, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MessageList;\nconst getMessages = (channelName, channels) => {\n  if (channels) {\n    const channel = channels.find(c => c.channel_name === channelName);\n    if (channel) {\n      return channel.messages;\n    }\n  }\n  return [];\n};\nconst GetUserChannels = () => {\n  _s2();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    // ユーザーデータを取得する関数\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`/user-channels?email=${email}`);\n        setUserData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          var _error$response, _error$response$data;\n          setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"An error occurred\");\n        } else {\n          setError(\"An error occurred\");\n        }\n        setIsLoading(false);\n      }\n    };\n    const fetchData = async () => {\n      if (email) {\n        await fetchUserData();\n      }\n    };\n    fetchData();\n  }, [email]);\n\n  /*if (email) {\n      fetchUserData();\n  }\n  }, [email]);\n    */\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  const handleSelectChannel = channelName => {\n    console.log(\"Selected channel:\", channelName);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Channels:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChannelSelect, {\n      userData: userData,\n      onSelectChannel: handleSelectChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s2(GetUserChannels, \"7Eqz/dxho1ukQ4A13f9e/lpQoUM=\");\n_c3 = GetUserChannels;\nexport default GetUserChannels;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChannelSelect\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"GetUserChannels\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChannelSelect","_ref","_s","userData","onSelectChannel","selectedChannel","setSelectedChannel","isLoading","setIsLoading","error","setError","channels","length","channel_name","handleSelectChannel","channelName","children","fileName","_jsxFileName","lineNumber","columnNumber","map","channel","onClick","style","cursor","channel_id","MessageList","messages","getMessages","_c","_ref2","message","user_id","content","String","edited_at","message_id","_c2","find","c","GetUserChannels","_s2","setUserData","email","setEmail","fetchUserData","response","get","data","isAxiosError","_error$response","_error$response$data","fetchData","handleEmailChange","event","target","value","console","log","htmlFor","type","id","onChange","_c3","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/getUserChannels.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ninterface Channel {\n    channel_id: number;\n    channel_name: string;\n    messages: Message[];\n}\n\ninterface Message {\n    message_id: {\n        String: string;\n        Valid: boolean;\n    };\n    channel_id: number;\n    user_id: string;\n    content: {\n        String: string;\n        Valid: boolean;\n    };\n    edited_at: {\n        String: string;\n        Valid: boolean;\n    };\n}\n\ninterface UserData {\n    user_id: string;\n    channels: Channel[];\n}\n\ninterface ChannelSelectProps {\n    userData: UserData | null;\n    onSelectChannel: (channelName: string) => void;\n}\n\ninterface MessageListProps {\n    messages: Message[];\n}\n\nconst ChannelSelect: React.FC<ChannelSelectProps> = ({\n                                                         userData,\n                                                         onSelectChannel\n                                                     }) => {\n    const [selectedChannel, setSelectedChannel] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        if (userData && userData.channels.length > 0) {\n            setSelectedChannel(userData.channels[0].channel_name);\n            onSelectChannel(userData.channels[0].channel_name);\n        }\n    }, [userData, onSelectChannel]);\n\n    const handleSelectChannel = (channelName: string) => {\n        setSelectedChannel(channelName);\n        onSelectChannel(channelName);\n    };\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h2>Select a channel:</h2>\n            <ul>\n                {userData?.channels.map((channel) => (\n                    <li\n                        key={channel.channel_id}\n                        onClick={() => handleSelectChannel(channel.channel_name)}\n                        style={{ cursor: \"pointer\" }}\n                    >\n                        {channel.channel_name}\n                    </li>\n                ))}\n            </ul>\n            {selectedChannel && (\n                <MessageList\n                    messages={getMessages(selectedChannel, userData?.channels)}\n                />\n            )}\n        </div>\n    );\n};\n\nconst MessageList: React.FC<MessageListProps> = ({ messages }) => (\n    <div>\n        <h2>Messages:</h2>\n        <ul>\n            {messages.map((message) => (\n                <li key={message.message_id.String}>\n                    <p>User ID: {message.user_id}</p>\n                    <p>Content: {message.content.String}</p>\n                    <p>Edited At: {message.edited_at.String}</p>\n                </li>\n            ))}\n        </ul>\n    </div>\n);\n\nconst getMessages = (channelName: string, channels: Channel[] | undefined): Message[] => {\n    if (channels) {\n        const channel = channels.find((c) => c.channel_name === channelName);\n        if (channel) {\n            return channel.messages;\n        }\n    }\n    return [];\n};\n\nconst GetUserChannels: React.FC = () => {\n    const [userData, setUserData] = useState<UserData | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    useEffect(() => {\n        // ユーザーデータを取得する関数\n        const fetchUserData = async () => {\n            try {\n                const response = await axios.get(`/user-channels?email=${email}`);\n                setUserData(response.data);\n                setIsLoading(false);\n            } catch (error: any) {\n                if (axios.isAxiosError(error)) {\n                    setError(error.response?.data?.error || \"An error occurred\");\n                } else {\n                    setError(\"An error occurred\");\n                }\n                setIsLoading(false);\n            }\n        };\n\n        const fetchData = async () => {\n            if (email) {\n                await fetchUserData();\n            }\n        };\n\n        fetchData();\n    }, [email]);\n\n\n        /*if (email) {\n            fetchUserData();\n        }\n    }, [email]);\n\n         */\n\n    const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(event.target.value);\n    };\n\n    const handleSelectChannel = (channelName: string) => {\n        console.log(\"Selected channel:\", channelName);\n    };\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h1>User Channels:</h1>\n            <div>\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    value={email}\n                    onChange={handleEmailChange}\n                />\n            </div>\n            <ChannelSelect\n                userData={userData}\n                onSelectChannel={handleSelectChannel}\n            />\n        </div>\n    );\n};\n\nexport default GetUserChannels;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}