{"ast":null,"code":"var _jsxFileName = \"/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/editMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n// import { isContentEditable } from '@testing-library/user-event/dist/types/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditMessage = _ref => {\n  _s();\n  let {\n    onEditSuccess\n  } = _ref;\n  const [messageId, setMessageId] = useState('');\n  const [newContent, setNewContent] = useState('');\n  const [error, setError] = useState('');\n\n  // const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     if (event.target.name === 'message_id') {\n  //         setMessageId(event.target.value);\n  //     } else if (event.target.name === 'content') {\n  //         setNewContent(event.target.value);\n  //     }\n  // };\n\n  const handleEditMessage = async () => {\n    try {\n      const response = await axios.get(`http://localhost8081/edit-message?message_id=${messageId}&content=${newContent}`);\n      console.log(response.data);\n      setError('');\n      onEditSuccess(); // 編集成功時の処理を呼び出す\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        const axiosError = error;\n        if (axiosError.response) {\n          setError(axiosError.response.data.error);\n        } else {\n          setError('Unknown error');\n        }\n      } else {\n        setError('Unknown error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message_id\",\n          value: messageId /*onChange={handleInputChange}*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Content:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"content\",\n          value: newContent /*onChange={handleInputChange}*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditMessage,\n      children: \"Edit Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(EditMessage, \"xKQB6UdACXxiMdw0D3CMMwkAcBE=\");\n_c = EditMessage;\nexport default EditMessage;\nvar _c;\n$RefreshReg$(_c, \"EditMessage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EditMessage","_ref","_s","onEditSuccess","messageId","setMessageId","newContent","setNewContent","error","setError","handleEditMessage","response","get","console","log","data","isAxiosError","axiosError","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onClick","_c","$RefreshReg$"],"sources":["/Users/Owner/Desktop/hackathon_muta/hackathon2/my-app-ts/src/editMessage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios, { AxiosError } from 'axios';\n// import { isContentEditable } from '@testing-library/user-event/dist/types/utils';\n\ninterface EditMessageProps {\n    onEditSuccess: () => void; // 編集成功時に親コンポーネントでの処理を行うためのコールバック関数\n}\n\nconst EditMessage: React.FC<EditMessageProps> = ({ onEditSuccess }) => {\n    const [messageId, setMessageId] = useState('');\n    const [newContent, setNewContent] = useState('');\n    const [error, setError] = useState('');\n\n    // const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     if (event.target.name === 'message_id') {\n    //         setMessageId(event.target.value);\n    //     } else if (event.target.name === 'content') {\n    //         setNewContent(event.target.value);\n    //     }\n    // };\n\n    const handleEditMessage = async () => {\n        try {\n            const response = await axios.get(`http://localhost8081/edit-message?message_id=${messageId}&content=${newContent}`);\n            console.log(response.data);\n            setError('');\n            onEditSuccess(); // 編集成功時の処理を呼び出す\n        } catch (error: unknown) {\n            if (axios.isAxiosError(error)) {\n                const axiosError = error as AxiosError;\n                if (axiosError.response) {\n                    setError((axiosError.response.data as { error: string }).error);\n                } else {\n                    setError('Unknown error');\n                }\n            } else {\n                setError('Unknown error');\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Edit Message</h1>\n            {error && <p>Error: {error}</p>}\n            <div>\n                <label>\n                    Message ID:\n                    <input type=\"text\" name=\"message_id\" value={messageId} /*onChange={handleInputChange}*/ />\n                </label>\n            </div>\n            <div>\n                <label>\n                    New Content:\n                    <input type=\"text\" name=\"content\" value={newContent} /*onChange={handleInputChange}*/ />\n                </label>\n            </div>\n            <button onClick={handleEditMessage}>Edit Message</button>\n        </div>\n    );\n};\n\nexport default EditMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}